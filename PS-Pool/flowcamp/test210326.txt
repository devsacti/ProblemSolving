첫 줄에 자가용을 잉요하려는 총인원수를 의미하는 자연수 N 1~20

두번째 줄부터 N줄에 걸쳐 자가용을 이용인원이 각자 쏘카존에 올수 있는 시간 구간이 주어진다
이 시간 구간별 중복구간이 을 찾는것

가령,

3
12:00 ~ 23:59
11:00 ~ 18:00
14:00 ~ 20:00

출력
14:00 ~18:00

일단 크게 시작시간중 최대, 종료시간 중 최소를 찾는것
+c관련하여 포인트
공백을 생각해서
scanf를 3번 호출

일단 간단하게,
시간단위와 분단위 별로 파트 2개 쪼개서 판단

=====
2번째 문제,
1 1 1 1 1 1 1 1  1 1
0 1 2 3 4 8 13 21 ~

전형적인 dp문제이고, 1행짜리 경로로서 dfs, bfs가 가능하다는데 후자는 시간초과남,
결국 올바른 방법으로 풀자

한편, 문제 오류 검색에서 tcp는 실제 필요능력
=====

1110
1110
1110
1000
에서 0은 흰색, 1은 검정색 칸을 상징
여기서 1*1 정사각형은 몇개 들어가나, 2*2는 몇개 들어가난 안들어가는 사이즈부터는 출력 x
1*1->1의 갯수를 센다
2*2 이상은 커널을 만들어서 카운팅
======
c . x c
. . . .
x x . .
. . . x
x . . x
문제는 추후 반드시 질문할것
=====
자원채취유형, dp

3 4 5
2 3 9
3 9 3
4 5 1
1 3 6
일때, 왼쪽상단에서 우측하단으로 내려갈때,번복없이
최대 값을 저장하는 경로는?

단순히 dfs,bfs 관점에서 현재 위치에서 하단, 우측 2분기로 접근해서 풀면
N범위상 2^10000의 연산량 나와서 오바

dp 테이블 필요, 추후 반드시 질문 필요

=====
핵심은
여러 조건들이 주어질 때, 이 조건들의 우선순위에 따라 구조체(파이썬은 클래스)를 정렬하는 것

